using System;
using Spine.Services.HttpClients;
using System.Threading.Tasks;
using System.Net;
using Spine.Services.Interswitch.Common;

namespace Spine.Services.Interswitch
{
    public static class SendBillsPaymentAdvice
    {
        public class Request : BaseRequest, IRequestModel
        {
            /// <summary>
            /// REQUIRED
            /// Length <= 20
            /// Unique payment code retrieved from GetBillerPaymentItems call
            /// </summary>
            public string PaymentCode { get; set; }

            /// <summary>
            /// REQUIRED
            /// Length <= 50
            /// Customer’s Unique Identifier
            /// </summary>
            public string CustomerId { get; set; }

            /// <summary>
            /// 
            /// Length <= 13
            /// Customer’s Mobile Number.
            /// </summary>
            public string CustomerMobile { get; set; }

            /// <summary>
            ///
            /// Length <= 50
            /// Customer’s Email Number.
            /// </summary>
            public string CustomerEmail { get; set; }

            /// <summary>
            /// REQUIRED
            /// Length <= 12
            /// Paid by customer. Amount should be sent in lower denomination
            /// </summary>
            public decimal Amount { get; set; }

            /// <summary>
            /// REQUIRED
            /// Length <= 12
            /// Unique requestReference generated on Client’s system and sent in DoTransfer request. 4 digit requestreference prefix will be provided by Interswitch
            /// </summary>
            public string RequestReference { get; set; }

            public string GetResourceUrl()
            {
                return _resourceUrl;
            }

            private readonly string _resourceUrl;

            public Request()
            {
                _resourceUrl = "payments/advices";
            }
        }

        public class Response : BaseResult
        {
            public Model Data { get; set; }
        }

        public class Model
        {
            /// <summary>
            /// Unique Transaction reference generated by Interswitch
            /// </summary>
        //    [JsonPropertyName("transactionReference")]         
            public string TransactionReference { get; set; }

            /// <summary>
            /// (Only returned if a billpayment is PIN based)	Biller’s Token
            /// </summary>
            public string MiscData { get; set; }

            /// <summary>
            /// (Only returned if a billpayment is PIN based)	Biller’s Token
            /// </summary>
            public string PIN { get; set; }

            /// <summary>
            /// A response of status is returned (SUCCESS, FAILED, or PENDING)
            /// </summary>
            public string ResponseCodeGrouping { get; set; }

            public string RequestReference { get; set; }
        }


        public class Handler
        {
            public async Task<Response> Handle(Request request, InterswitchClient interswitchClient)
            {
                try
                {
                    var response = await interswitchClient.Post<Response>($"{request.GetResourceUrl()}", request);

                    if (response?.StatusCode == HttpStatusCode.OK)
                    {
                        var successModel = ((ApiSuccessModel<Response>)response);
                        return successModel.Model;
                    }
                    else
                    {
                        var errorModel = (ApiErrorModel)response;
                        return new Response
                        {
                            Message = errorModel?.ErrorMessage
                        };
                    }
                }
                catch (Exception ex)
                {
                    return new Response
                    {
                        Message = ex.Message
                    };
                }
            }
        }
    }
}
